Option Explicit Off
Imports System.Data.SqlClient

Public Class FrmStocksA1
<<<<<<< HEAD
    Inherits Form
    Public WithEvents BS As New BindingSource
    ReadOnly dsSTOCK As New DataSet
    Public SqlDataAdapter1 As New SqlDataAdapter
=======
    Inherits System.Windows.Forms.Form
    Public WithEvents BS As New BindingSource
    ReadOnly dsSTOCK As New DataSet
    Public SqlDataAdapter1 As New SqlClient.SqlDataAdapter
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c

    Private WithEvents ConnectDataBase As System.ComponentModel.BackgroundWorker
    Private WithEvents SaveTab As System.ComponentModel.BackgroundWorker
    Private WithEvents RefreshTab As System.ComponentModel.BackgroundWorker
    Public Delegate Sub LoadDataBaseCallBack()
    Public Delegate Sub CallLoadDataBase()
    Public Delegate Sub PictureBox2Callback()

    ReadOnly Cancel As Boolean = False
    Dim DelRow As Boolean = False
    Dim RowCount As Integer = 0
<<<<<<< HEAD
    Private Sub FrmStocksA1_Shown(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Shown
        On Error Resume Next
        Me.Show()
    End Sub
    Private Sub FrmStocksA1_Load(ByVal sender As System.Object, ByVal e As EventArgs) Handles MyBase.Load
=======
    Private Sub FrmStocksA1_Shown(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Shown
        On Error Resume Next
        Me.Show()
    End Sub
    Private Sub FrmStocksA1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        On Error Resume Next
        Me.BackgroundImage = img
        For a As Byte = 0 To 10
            System.Threading.Thread.Sleep(10)
            Application.DoEvents()
            Me.Opacity = a / 10
        Next
        Me.SHOWBUTTON()
        Me.ADDBUTTON.Enabled = True
        Me.SAVEBUTTON.Enabled = False
        ChkPD_CheckedChanged(sender, e)
    End Sub
    Private Sub SAVERECORD()
        Try
            Dim N As Double
<<<<<<< HEAD
            Dim Consum As New SqlConnection(constring)
            Dim cmd1 As New SqlCommand("SELECT MAX(SKITM1) FROM STOCKSITEMS", Consum)
=======
            Dim Consum As New SqlClient.SqlConnection(constring)
            Dim cmd1 As New SqlClient.SqlCommand("SELECT MAX(SKITM1) FROM STOCKSITEMS", Consum)
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
            If Consum.State = ConnectionState.Open Then Consum.Close()
            Consum.Open()
            Dim resualt As Object = cmd1.ExecuteScalar()
            If IsDBNull(resualt) Then
                N = 1
            Else
                N = CType(resualt, Integer) + 1
            End If
            Consum.Close()
            Dim sql As String = "INSERT INTO STOCKSITEMS(SKITM2, SKITM3, SKITM4, SKITM5, SKITM6, SKITM7, SKITM8, SKITM9, SKITM10, SKITM11, SKITM12, SKITM13, SKITM14, SKITM15, SKITM16, SKITM17, SKITM18, SKITM19, SKITM20, SKITM21, SKITM22, SKITM23, SKITM24, SKITM25, SKITM26, SKITM27, SKITM28, ChkPD, IT_DATEP, IT_DATEEX, USERNAME, Cuser, COUSER, da, ne) VALUES  (@SKITM2, @SKITM3, @SKITM4, @SKITM5, @SKITM6, @SKITM7, @SKITM8, @SKITM9, @SKITM10, @SKITM11, @SKITM12, @SKITM13, @SKITM14, @SKITM15, @SKITM16, @SKITM17, @SKITM18, @SKITM19, @SKITM20, @SKITM21, @SKITM22, @SKITM23, @SKITM24, @SKITM25, @SKITM26, @SKITM27, @SKITM28, @ChkPD, @IT_DATEP, @IT_DATEEX, @USERNAME, @Cuser, @COUSER, @da, @ne)"
<<<<<<< HEAD
            Dim cmd As New SqlCommand(sql, Consum)
=======
            Dim cmd As New SqlClient.SqlCommand(sql, Consum)
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
            With cmd
                .CommandType = CommandType.Text
                .Connection = Consum
                .Parameters.Add("@SKITM1", SqlDbType.Int).Value = Val(N) + 1
                .Parameters.Add("@SKITM2", SqlDbType.NVarChar).Value = Me.TEXTGROUPCODE.Text
                .Parameters.Add("@SKITM3", SqlDbType.NVarChar).Value = Me.ComboGROUPNAME.Text
                .Parameters.Add("@SKITM4", SqlDbType.Int).Value = Me.TEXTITEMCODE.Text
                .Parameters.Add("@SKITM5", SqlDbType.NVarChar).Value = Me.TEXTITEMNAME.Text
                .Parameters.Add("@SKITM6", SqlDbType.NVarChar).Value = Me.ComboHashUnit.Text
                .Parameters.Add("@SKITM7", SqlDbType.NVarChar).Value = Me.TextQUANTITY.Text
                .Parameters.Add("@SKITM8", SqlDbType.NVarChar).Value = Me.TEXTUnitPrice.EditValue
                .Parameters.Add("@SKITM9", SqlDbType.NVarChar).Value = Me.TEXTDiscount.EditValue
                .Parameters.Add("@SKITM10", SqlDbType.NVarChar).Value = Me.TEXTPurchasingPrice.EditValue
                .Parameters.Add("@SKITM11", SqlDbType.NVarChar).Value = Me.TEXTOrderLimit.EditValue
                .Parameters.Add("@SKITM12", SqlDbType.NVarChar).Value = Me.TextSalesTaxRate.EditValue
                .Parameters.Add("@SKITM13", SqlDbType.NVarChar).Value = Me.TextInitialBalance.Text
                .Parameters.Add("@SKITM14", SqlDbType.NVarChar).Value = Me.TexTSellingPrice.EditValue
                .Parameters.Add("@SKITM15", SqlDbType.NVarChar).Value = Me.TextDiscountPercentageWhenSelling.EditValue
                .Parameters.Add("@SKITM16", SqlDbType.NVarChar).Value = Me.TextLowestDiscountRateWhenSelling.EditValue
                .Parameters.Add("@SKITM17", SqlDbType.NVarChar).Value = Me.TextHighestDiscountRateWhenSelling.EditValue
                .Parameters.Add("@SKITM18", SqlDbType.NVarChar).Value = Me.TextTotalSecondSellingPrice.EditValue
                .Parameters.Add("@SKITM19", SqlDbType.NVarChar).Value = Me.TextTotalThirdSalePrice.EditValue
                .Parameters.Add("@SKITM20", SqlDbType.Bit).Value = Convert.ToInt32(Me.CheckPricesMentionedIncludeSalesTax.Checked)
                .Parameters.Add("@SKITM21", SqlDbType.Bit).Value = Convert.ToInt32(Me.CheckItemIsSubjectToSalesTax.Checked)
                .Parameters.Add("@SKITM22", SqlDbType.NVarChar).Value = Me.ComboHashUnit1.Text
                .Parameters.Add("@SKITM23", SqlDbType.NVarChar).Value = Me.ComboHashUnit2.Text
                .Parameters.Add("@SKITM24", SqlDbType.NVarChar).Value = Me.TextHashUnitNumber.EditValue
                .Parameters.Add("@SKITM25", SqlDbType.NVarChar).Value = Me.TextHashUnitNumber1.EditValue
                .Parameters.Add("@SKITM26", SqlDbType.NVarChar).Value = Me.TextHashUnitNumber2.EditValue
                .Parameters.Add("@SKITM27", SqlDbType.NVarChar).Value = Me.TextSecondSellingPrice.EditValue
                .Parameters.Add("@SKITM28", SqlDbType.NVarChar).Value = Me.TextThirdSalePrice.EditValue
                .Parameters.Add("@ChkPD", SqlDbType.Bit).Value = Convert.ToInt32(Me.ChkPD.Checked)
                If ChkPD.Checked = True Then
                    .Parameters.Add("@IT_DATEP", SqlDbType.Date).Value = CDate(ProductionDate.Value.ToString)
                    .Parameters.Add("@IT_DATEEX", SqlDbType.Date).Value = CDate(ExpiryDate.Value.ToString)
                Else
                    .Parameters.Add("@IT_DATEP", SqlDbType.Date).Value = DBNull.Value
                    .Parameters.Add("@IT_DATEEX", SqlDbType.Date).Value = DBNull.Value
                End If



                .Parameters.Add("@USERNAME", SqlDbType.NVarChar).Value = USERNAME
                .Parameters.Add("@CUser", SqlDbType.NVarChar).Value = CUser
                .Parameters.Add("@COUser", SqlDbType.NVarChar).Value = COUser
                .Parameters.Add("@da", SqlDbType.NVarChar).Value = ServerDateTime.ToString("yyyy-MM-dd")
                .Parameters.Add("@ne", SqlDbType.NVarChar).Value = ServerDateTime.ToString("hh:mm:ss tt")
                .CommandText = sql
            End With
            If Consum.State = ConnectionState.Open Then Consum.Close()
            Consum.Open()
            cmd.ExecuteNonQuery()
            Consum.Close()
        Catch ex As Exception
            MessageBox.Show(ex.Message, "Error12", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try
    End Sub
    Private Sub SaveData_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles SaveTab.DoWork
        Try
1:
            'Dim myBuilder As SqlCommandBuilder = New SqlCommandBuilder(SqlDataAdapter1)
            'myBuilder.GetUpdateCommand()
            'SqlDataAdapter1.UpdateCommand = myBuilder.GetUpdateCommand()

            'SqlDataAdapter1.Update(dsSTOCK, "STOCKSITEMS")
            'dsSTOCK = New DataSet
            'SqlDataAdapter1.Fill(dsSTOCK, "STOCKSITEMS")
            'dsSTOCK.RejectChanges()
        Catch ex As Exception
            If ex.Message.GetHashCode = -1115812848 Or ex.Message.GetHashCode = 379362862 Then
                e.Cancel = True
                PictureBox2False()
            ElseIf ex.Message.GetHashCode = -1968342016 Or ex.Message.GetHashCode = -932284142 Or ex.Message.GetHashCode = -1053942103 Then
                e.Cancel = True
                TestNet = False
                Me.PictureBox2False()
            ElseIf ex.Message.GetHashCode = 1718601380 Then
                GoTo 1
            ElseIf ex.Message.GetHashCode = -652120241 Or ex.Message.GetHashCode = 2067669773 Then
                Me.DelRow = True
                Me.PictureBox2False()
                MsgBox("قام احد المستخدمين بحذف السجل المحدد" & vbCrLf & "سوف يتم تحديث السجلات الآن", 16, "تنبيه")
            Else
                e.Cancel = True
                Me.PictureBox2False()
                MessageBox.Show(ex.Message, "Error5", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
        End Try
    End Sub
    Private Sub SaveData_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles SaveTab.RunWorkerCompleted
        Try
            If DelRow = True Then
<<<<<<< HEAD
                Me.RefreshTab = New ComponentModel.BackgroundWorker With {
=======
                Me.RefreshTab = New System.ComponentModel.BackgroundWorker With {
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
                    .WorkerReportsProgress = True,
                    .WorkerSupportsCancellation = True
                }
                Me.RefreshTab.RunWorkerAsync()
                Exit Sub
            ElseIf e.Cancelled Then
                Exit Sub
            End If
            Application.DoEvents()
            Me.BS.DataSource = dsSTOCK.Tables("STOCKSITEMS")
            Me.Cursor = Cursors.Default
            Me.PictureBox2.Visible = False
            If Me.BS.Count < Me.RowCount Then
                MsgBox("تمت عملية الحفظ في قاعدة البيانات بنجاح" & vbCrLf & " تنبيه : قام احد المستخدمين بحذف سجلات عدد " & RowCount - BS.Count, 64 + 524288, " نجاح الحفظ والتغييرات")
                Exit Sub
            ElseIf Me.BS.Count > Me.RowCount Then
                MsgBox("تمت عملية الحفظ في قاعدة البيانات بنجاح" & vbCrLf & " تنبيه : قام احد المستخدمين باضافة سجلات عدد " & BS.Count - RowCount, 64 + 524288, " نجاح الحفظ والتغييرات")
                Exit Sub
            End If
<<<<<<< HEAD
            Dim Sound As IO.Stream = My.Resources.save
=======
            Dim Sound As System.IO.Stream = My.Resources.save
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
            My.Computer.Audio.Play(Sound, AudioPlayMode.Background)
            Me.ADDBUTTON.Enabled = True
            Me.SAVEBUTTON.Enabled = False
            MsgBox("تمت عملية الحفظ في قاعدة البيانات بنجاح", 64 + 524288, "نجاح الحفظ والتغييرات والتحديث")
        Catch Ex As Exception
            MessageBox.Show(Ex.Message, "Error6", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try
    End Sub
    Public Sub PictureBox2False()
        On Error Resume Next
        If Me.InvokeRequired Then
            Me.Invoke(New PictureBox2Callback(AddressOf PictureBox2False), Array.Empty(Of Object)())
        Else
            Me.Cursor = Cursors.Default
            Me.PictureBox2.Visible = False
            Me.PictureBox5.Visible = False
        End If
    End Sub
<<<<<<< HEAD
    Private Sub ADDBUTTON_Click(ByVal sender As System.Object, ByVal e As EventArgs) Handles ADDBUTTON.Click
=======
    Private Sub ADDBUTTON_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ADDBUTTON.Click
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        If TestNet = False Then
            MsgBox("الاتصال بالانترنت غير متوفر", 16, "تنبيه")
            Exit Sub
        End If
        Call MangUsers()
        If LockAddRow = False Then
            MsgBox("عفوا .. قام الأدمن بمنع خاصية اضافة وتعديل السجلات من البرنامج", 16, "تنبيه")
            Exit Sub
        End If
        Dim n As Double
        n = Me.BS.Count
        On Error Resume Next
        Me.BS.EndEdit()
        Me.BS.AddNew()
        CLEARDATA()
        Me.MAXRECORD()
        Me.CheckPricesMentionedIncludeSalesTax.Checked = True
        Me.CheckItemIsSubjectToSalesTax.Checked = True
        Me.TEXTGROUPCODE.Focus()
        Me.TextInitialBalance.Text = "1"
        Me.TextQUANTITY.Text = ""
        Me.TEXTDiscount.EditValue = "0"
        Me.TEXTOrderLimit.EditValue = "1"
        Me.TextDiscountPercentageWhenSelling.EditValue = "0"
        Me.TextLowestDiscountRateWhenSelling.EditValue = "0"
        Me.TextHighestDiscountRateWhenSelling.EditValue = "0"
        Me.TextSalesTaxRate.EditValue = "0"
        Me.TextHashUnitNumber.EditValue = "1"
        Me.TextHashUnitNumber1.EditValue = "1"
        Me.TextHashUnitNumber2.EditValue = "1"

        Me.TexTSellingPrice.EditValue = "1.000"
        Me.TextSecondSellingPrice.EditValue = "0.000"
        Me.TextThirdSalePrice.EditValue = "0.000"
        ModuleGeneral.FILLCOMBOBOX1("STOCKSITEMS", "SKITM3", "CUser", ModuleGeneral.CUser, Me.ComboGROUPNAME)
        Me.ADDBUTTON.Enabled = False
        Me.SAVEBUTTON.Enabled = True
<<<<<<< HEAD
        Dim Sound As IO.Stream = My.Resources.addv
=======
        Dim Sound As System.IO.Stream = My.Resources.addv
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        My.Computer.Audio.Play(Sound, AudioPlayMode.WaitToComplete)
    End Sub
    Private Sub CLEARDATA()
        On Error Resume Next
        Dim txt As Control
        For Each txt In Me.Controls
            If TypeOf txt Is TextBox Or TypeOf txt Is ComboBox Then
                txt.Text = ""
            End If
        Next
    End Sub
    Private Sub MAXRECORD()
        On Error Resume Next
<<<<<<< HEAD
        Dim Consum As New SqlConnection(constring)
        Dim V As Integer
        Dim SQL As New SqlCommand("SELECT MAX(SKITM1) FROM STOCKSITEMS", Consum)
        Dim CMD As New SqlCommand
=======
        Dim Consum As New SqlClient.SqlConnection(constring)
        Dim V As Integer
        Dim SQL As New SqlCommand("SELECT MAX(SKITM1) FROM STOCKSITEMS", Consum)
        Dim CMD As New SqlClient.SqlCommand
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        With CMD
            .CommandType = CommandType.Text
            .Connection = Consum
            If Consum.State = ConnectionState.Open Then Consum.Close()
            Consum.Open()
            .CommandText = SQL.CommandText
            V = .ExecuteScalar()
        End With
        Me.TEXT1.Text = Val(V) + 1
        Consum.Close()

    End Sub
<<<<<<< HEAD
    Private Sub SAVEBUTTON_Click(ByVal sender As System.Object, ByVal e As EventArgs) Handles SAVEBUTTON.Click
=======
    Private Sub SAVEBUTTON_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SAVEBUTTON.Click
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        Try
            If TestNet = False Then
                MsgBox("الاتصال بالانترنت غير متوفر", 16, "تنبيه")
                Exit Sub
            End If
            If BS.Count = 0 Then Beep() : Exit Sub
            If LockSave = False Then
                MsgBox("عفوا .. قام الأدمن بمنع خاصية اضافة وتعديل السجلات من البرنامج", 16, "تنبيه")
                Exit Sub
            End If
            If Me.TEXTITEMCODE.Text = "" Then
                MsgBox("عفوا .. لا يمكن ترك حقل كود الصنف فارغ", 16, "تنبيه")
                Me.TEXTITEMCODE.Focus()
                Exit Sub
            End If
            If Me.TEXTITEMNAME.Text = "" Then
                MsgBox("عفوا .. لا يمكن ترك حقل الصنف فارغ", 16, "تنبيه")
                Me.TEXTITEMNAME.Focus()
                Exit Sub
            End If
            If Me.ProductionDate.Text = "" Then
                MsgBox("عفوا .. لا يمكن ترك حقل تاريخ الانتاج فارغ", 16, "تنبيه")
                Me.ProductionDate.Focus()
                Exit Sub
            End If
            If Me.ExpiryDate.Text = "" Then
                MsgBox("عفوا .. لا يمكن ترك حقل تاريخ الانتهاء فارغ", 16, "تنبيه")
                Me.ExpiryDate.Focus()
                Exit Sub
            End If
            If Me.TEXTUnitPrice.EditValue = "" Then
                MsgBox("عفوا .. لا يمكن ترك حقل سعر الوحدة فارغ", 16, "تنبيه")
                Me.TEXTUnitPrice.Focus()
                Exit Sub
            End If
            If Me.ComboHashUnit.Text = "" Then
                MsgBox("عفوا .. لا يمكن ترك حقل وحدة التجزئة فارغ", 16, "تنبيه")
                Me.ComboHashUnit.Focus()
                Exit Sub
            End If
            If Me.ComboHashUnit1.Text = "" Then
                MsgBox("عفوا .. لا يمكن ترك حقل وحدة التجزئة(1) فارغ", 16, "تنبيه")
                Me.ComboHashUnit1.Focus()
                Exit Sub
            End If
            If Me.ComboHashUnit2.Text = "" Then
                MsgBox("عفوا .. لا يمكن ترك حقل وحدة التجزئة(2) فارغ", 16, "تنبيه")
                Me.ComboHashUnit2.Focus()
                Exit Sub
            End If

            Static P As Integer
            P = Me.BS.Count
<<<<<<< HEAD
            Dim Consum As New SqlConnection(constring)
            Dim strsq1 As New SqlCommand("SELECT SKITM4  FROM STOCKSITEMS  WHERE (STOCKSITEMS.SKITM4)='" & Me.TEXTITEMCODE.Text & "'", Consum)
            Dim ds As New DataSet
            Dim Adp1 As New SqlDataAdapter(strsq1)
=======
            Dim Consum As New SqlClient.SqlConnection(constring)
            Dim strsq1 As New SqlClient.SqlCommand("SELECT SKITM4  FROM STOCKSITEMS  WHERE (STOCKSITEMS.SKITM4)='" & Me.TEXTITEMCODE.Text & "'", Consum)
            Dim ds As New DataSet
            Dim Adp1 As New SqlClient.SqlDataAdapter(strsq1)
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
            ds.Clear()
            Adp1.Fill(ds, "STOCKSITEMS")
            If ds.Tables(0).Rows.Count > 0 Then
                MessageBox.Show("تم تسجيل بيانات الصنف سابقاً", "تكرار الصنف", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button2, MessageBoxOptions.RtlReading)
                Me.TEXTITEMCODE.Focus()
                Exit Sub
            Else
                Me.SHOWBUTTON()
                Me.SAVEBUTTON.Enabled = False
                Me.Cursor = Cursors.WaitCursor
                Me.PictureBox2.Visible = True
                Me.SAVERECORD()
                Me.BS.EndEdit()
                Me.RowCount = Me.BS.Count
<<<<<<< HEAD
                Me.SaveTab = New ComponentModel.BackgroundWorker With {
=======
                Me.SaveTab = New System.ComponentModel.BackgroundWorker With {
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
                    .WorkerReportsProgress = True,
                    .WorkerSupportsCancellation = True
                }
                Me.SaveTab.RunWorkerAsync()
                Me.BS.Position = P + 1
            End If
            Adp1.Dispose()
            Insert_Actions(Me.TEXT1.Text.Trim, "حفظ", Me.Text)
        Catch ex As Exception
            MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try
        Consum.Close()
    End Sub
<<<<<<< HEAD
    Private Sub ButAA_Click(ByVal sender As System.Object, ByVal e As EventArgs) Handles ButAA.Click
=======
    Private Sub ButAA_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ButAA.Click
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        strlnputstring




        intlength = Len(strlnputstring)
        intnamelength = 6
        Randomize()
        strname = "000"
        For intstep = 1 To intnamelength
            intrand = Int(intlength * Rnd()) + 1
            strname &= Mid(strlnputstring, intrand, 1)
        Next
        TEXTITEMCODE.Text = strname
    End Sub
    Private Sub SHOWBUTTON()
        On Error Resume Next
        Me.ADDBUTTON.Enabled = LockAddRow
        Me.SAVEBUTTON.Enabled = LockSave
    End Sub
<<<<<<< HEAD
    Private Sub TEXT2_KeyDown(ByVal sender As System.Object, ByVal e As KeyEventArgs) Handles TEXTGROUPCODE.KeyDown, TEXTITEMCODE.KeyDown, TEXTITEMNAME.KeyDown, ComboGROUPNAME.KeyDown, ComboHashUnit.KeyDown
=======
    Private Sub TEXT2_KeyDown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles TEXTGROUPCODE.KeyDown, TEXTITEMCODE.KeyDown, TEXTITEMNAME.KeyDown, ComboGROUPNAME.KeyDown, ComboHashUnit.KeyDown
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        On Error Resume Next
        Select Case e.KeyCode
            Case Keys.Enter
                SendKeys.SendWait("{TAB}")
        End Select
    End Sub

<<<<<<< HEAD
    Private Sub TEXT7_TextChanged(ByVal sender As Object, ByVal e As EventArgs) Handles TEXTDiscount.EditValueChanged, TEXTUnitPrice.EditValueChanged, TextHashUnitNumber1.EditValueChanged, TextHashUnitNumber2.EditValueChanged, TextSecondSellingPrice.EditValueChanged, TextThirdSalePrice.EditValueChanged
=======
    Private Sub TEXT7_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles TEXTDiscount.EditValueChanged, TEXTUnitPrice.EditValueChanged, TextHashUnitNumber1.EditValueChanged, TextHashUnitNumber2.EditValueChanged, TextSecondSellingPrice.EditValueChanged, TextThirdSalePrice.EditValueChanged
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        On Error Resume Next
        Me.TEXTPurchasingPrice.EditValue = Format(Val(TextQUANTITY.Text) * Val(TEXTUnitPrice.EditValue) * (100 - Val(TEXTDiscount.EditValue)) / 100, "0.000")
        Me.TextTotalSecondSellingPrice.EditValue = Format(Val(Me.TextSecondSellingPrice.EditValue) * Val(Me.TextHashUnitNumber1.EditValue) * (100 - Val(Me.TextDiscountPercentageWhenSelling.EditValue)) / 100, "0.000")
        Me.TextTotalThirdSalePrice.EditValue = Format(Val(Me.TextThirdSalePrice.EditValue) * Val(Me.TextHashUnitNumber2.EditValue) * (100 - Val(Me.TextDiscountPercentageWhenSelling.EditValue)) / 100, "0.000")
    End Sub
<<<<<<< HEAD
    Private Sub TEXT13_KeyPress(ByVal sender As Object, ByVal e As KeyPressEventArgs)
=======
    Private Sub TEXT13_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        If Asc(e.KeyChar) = 13 Then
            If Not IsDate(ProductionDate.Text) Then
                MsgBox("تاريخ غير صالخ")
                Me.ProductionDate.Focus()
            Else
                Dim years As Double
                Dim SecondDate As Date
                SecondDate = CDate(ProductionDate.Text)
                years = 5
                Me.ExpiryDate.Text = DateAdd(DateInterval.Year, years, SecondDate)
                Me.ExpiryDate.Focus()
            End If
        End If
    End Sub

    Private Sub BackWorker2_DoWork(ByVal sender As System.Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles BackWorker2.DoWork

    End Sub
    Private Sub ChkPD_CheckedChanged(sender As Object, e As EventArgs) Handles ChkPD.CheckedChanged
        If ChkPD.Checked = True Then
            ProductionDate.Enabled = True
            ExpiryDate.Enabled = True
        Else
            ProductionDate.Enabled = False
            ExpiryDate.Enabled = False
        End If
    End Sub



<<<<<<< HEAD
    Private Sub ComboGROUPNAME_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As EventArgs) Handles ComboGROUPNAME.SelectedIndexChanged

        Dim Adp As SqlDataAdapter
        Dim Consum As New SqlConnection(constring)
=======
    Private Sub ComboGROUPNAME_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ComboGROUPNAME.SelectedIndexChanged

        Dim Adp As SqlClient.SqlDataAdapter
        Dim Consum As New SqlClient.SqlConnection(constring)
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        On Error Resume Next
        Dim strsql As New SqlCommand("SELECT SKITM2  FROM STOCKSITEMS WHERE SKITM3 ='" & Me.ComboGROUPNAME.Text & "'", Consum)

        'SKITM4  FROM STOCKSITEMS

        Dim ds As New DataSet
<<<<<<< HEAD
        Adp = New SqlDataAdapter(strsql)
=======
        Adp = New SqlClient.SqlDataAdapter(strsql)
>>>>>>> c3c12be08c1593ad8bd7ed80a18e0ca7a526c28c
        ds.Clear()
        Adp.Fill(ds)
        If ds.Tables(0).Rows.Count > 0 Then
            Me.TEXTGROUPCODE.Text = ds.Tables(0).Rows(0).Item(0)
        Else
            Me.TEXTGROUPCODE.Text = ""
        End If
        Me.TEXTGROUPCODE.Enabled = False
        Adp.Dispose()
        Consum.Close()
    End Sub
End Class